[{"/Users/simopro/Desktop/Start2Impact/reactproject/library/src/index.js":"1","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/App.js":"2","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/Navbar.jsx":"3","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/api/googleBook.js":"4","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/SearchBar.jsx":"5","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/ModalFilters.jsx":"6","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/Book.jsx":"7","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/history.js":"8","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/Main.jsx":"9","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/context/Context.js":"10","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/BookList.jsx":"11","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/NavbarContent.jsx":"12","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/Home.jsx":"13","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/home/HomeProgress.jsx":"14","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/social/Social.jsx":"15","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/signInUp/Login.jsx":"16","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/signInUp/SignUp.jsx":"17","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/book/BookFocus.jsx":"18"},{"size":527,"mtime":1615751992537,"results":"19","hashOfConfig":"20"},{"size":620,"mtime":1615970039852,"results":"21","hashOfConfig":"20"},{"size":5140,"mtime":1616010894944,"results":"22","hashOfConfig":"20"},{"size":103,"mtime":1607620449416,"results":"23","hashOfConfig":"20"},{"size":3245,"mtime":1616010035832,"results":"24","hashOfConfig":"20"},{"size":2686,"mtime":1615972417908,"results":"25","hashOfConfig":"20"},{"size":1638,"mtime":1616057488422,"results":"26","hashOfConfig":"20"},{"size":95,"mtime":1608492614573,"results":"27","hashOfConfig":"20"},{"size":332,"mtime":1615365607298,"results":"28","hashOfConfig":"20"},{"size":1622,"mtime":1616012647601,"results":"29","hashOfConfig":"20"},{"size":7049,"mtime":1616084674245,"results":"30","hashOfConfig":"20"},{"size":1339,"mtime":1615757180447,"results":"31","hashOfConfig":"20"},{"size":3552,"mtime":1616057320073,"results":"32","hashOfConfig":"20"},{"size":4992,"mtime":1616080914611,"results":"33","hashOfConfig":"20"},{"size":1030,"mtime":1615714228260,"results":"34","hashOfConfig":"20"},{"size":5731,"mtime":1615823407111,"results":"35","hashOfConfig":"20"},{"size":6924,"mtime":1616060739100,"results":"36","hashOfConfig":"20"},{"size":7572,"mtime":1616094510113,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"karqxk",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/simopro/Desktop/Start2Impact/reactproject/library/src/index.js",[],["80","81"],"/Users/simopro/Desktop/Start2Impact/reactproject/library/src/App.js",[],"/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/Navbar.jsx",["82","83"],"import React, { useState, useContext } from 'react';\nimport {\n    Typography, Button, AppBar, Toolbar, IconButton, makeStyles,\n    Dialog, DialogContentText, DialogContent, Snackbar\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport logoBook from '../images/logoBook.png';\nimport NavbarContent from './NavbarContent';\nimport Login from './signInUp/Login';\nimport SignUp from './signInUp/SignUp';\nimport { Context } from '../context/Context';\n\nconst font = \"'Satisfy', cursive\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        fontFamily: font,\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)',\n    },\n    customizeToolbar: {\n        maxHeight: 60,\n        minHeight: 46,\n    },\n    style: {\n        background: '#dfe0d7',\n        color: '#000',\n\n    },\n    logoStyle: {\n        maxHeight: 50,\n    },\n    button: {\n        position: 'absolute',\n        right: 10,\n    },\n    notVisible: {\n        flexGrow: 1,\n    },\n    dialogStyle: {\n        padding: 0,\n        [theme.breakpoints.up('sm')]: {\n            padding: '0 4rem',\n        },\n        maxWidth: 600,\n        textAlign: 'center',\n    },\n}));\n\n\nexport default function Navbar() {\n    const classes = useStyles();\n\n    const { reSetSnackbar, snackOpen } = useContext(Context);\n    const [open, setOpen] = useState(false);\n    const [selectedForm, setForm] = useState('Signup');\n\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const formChange = () => {\n        if (selectedForm === 'Signup')\n            setForm('Login');\n        else\n            setForm('Signup');\n    };\n\n    const renderForm = () => {\n        if (selectedForm === 'Signup') {\n            return (\n                <div>\n                    <SignUp handleClose={handleClose} className={classes.formStyle} />\n                    <DialogContent style={{ textAlign: 'center', paddingBottom: 5 }}>\n                        <DialogContentText>\n                            Do you have an account?\n                            <a href=\"#\" onClick={formChange}> Login</a>\n                        </DialogContentText>\n                    </DialogContent>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <Login handleClose={handleClose} />\n                    <DialogContent style={{ textAlign: 'center', paddingBottom: 5 }}>\n                        <DialogContentText>\n                            Don't you have an account?\n                        <a href=\"#\" onClick={formChange}> Signup</a>\n                        </DialogContentText>\n                    </DialogContent>\n                </div>\n            )\n        }\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar className={classes.style} position=\"static\">\n                <Toolbar className={classes.customizeToolbar} >\n                    <IconButton component={Link} to=\"/\" edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <img className={classes.logoStyle} src={`${logoBook}`} alt=\"logo\" />\n                    </IconButton>\n                    <Typography variant=\"h4\" className={classes.title}>\n                        My Library\n                    </Typography>\n                    <Typography className={classes.notVisible}></Typography>\n                    <Button className={classes.button} variant=\"outlined\" onClick={handleOpen} color=\"inherit\">SIGN IN / SIGN UP</Button>\n                    <Dialog\n                        justify=\"center\"\n                        maxWidth=\"xl\"\n                        open={open}\n                        onClose={handleClose}\n                        aria-labelledby=\"form-dialog-title\"\n                    >\n                        <IconButton\n                            color=\"inherit\"\n                            onClick={handleClose}\n                            justify=\"flex-end\"\n                            className={classes.button}\n                        >\n                            <CloseIcon\n                                style={{\n                                    fontSize: '1.8rem',\n                                    color: 'grey',\n                                }}\n                            />\n                        </IconButton>\n                        {renderForm()}\n                    </Dialog>\n                </Toolbar>\n            </AppBar>\n            <NavbarContent />\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                open={snackOpen}\n                autoHideDuration={5000}\n                onClose={reSetSnackbar}\n                message={<span id=\"message-id\">User registered successfully!</span>}\n            />\n        </div>\n\n    );\n};\n","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/api/googleBook.js",[],"/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/SearchBar.jsx",[],"/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/ModalFilters.jsx",[],"/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/Book.jsx",[],"/Users/simopro/Desktop/Start2Impact/reactproject/library/src/history.js",[],"/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/Main.jsx",[],"/Users/simopro/Desktop/Start2Impact/reactproject/library/src/context/Context.js",[],"/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/BookList.jsx",["84"],"/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/NavbarContent.jsx",[],["85","86"],"/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/Home.jsx",["87"],"/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/home/HomeProgress.jsx",[],"/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/social/Social.jsx",[],["88","89"],"/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/signInUp/Login.jsx",["90"],"import React, { useState, useEffect } from 'react';\nimport {\n    TextField, DialogActions, DialogContent, DialogTitle,\n    makeStyles, Button, Grid, Input, InputAdornment,\n    IconButton, FormControl, InputLabel\n} from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst useStyle = makeStyles((theme) => ({\n    dialogStyle: {\n        padding: 15,\n        [theme.breakpoints.up('sm')]: {\n            padding: '0 4rem',\n        },\n        maxWidth: 600,\n    },\n    textFieldStyle: {\n        width: 'auto',\n        [theme.breakpoints.up('xs')]: {\n            width: 140,\n        },\n        [theme.breakpoints.up('sm')]: {\n            width: 300,\n        },\n        [theme.breakpoints.up('md')]: {\n            width: 340,\n        },\n    },\n    buttonStyle: {\n        justifyContent: 'center',\n        paddingTop: 10,\n    },\n    forgotPsw: {\n        fontSize: 13,\n    },\n    linkStyle: {\n        textDecoration: 'none',\n        color: 'green',\n        \"&:hover\": {\n            color: 'black',\n            textDecoration: 'none',\n        },\n    }\n}))\n\nexport default function Login({ handleClose }) {\n    const classes = useStyle();\n\n    const [email, setEmail] = useState('');\n    const [psw, setPsw] = useState('');\n    const [control, setControl] = useState(false);\n    const [showPassword, setVisibility] = useState(false);\n\n    const controlEmail = (email) => {\n        if (email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i) || email === '')\n            return true;\n        else\n            return false;\n    };\n\n\n    const ready = () => {\n        if (email !== '' && psw !== '' && controlEmail(email) && psw.length >= 8)\n            setControl(true);\n        else\n            setControl(false);\n    };\n\n    useEffect(() => {\n        ready();\n    }, [email, psw])\n\n    const passwordControl = psw.length >= 8 || psw === '' ? null : { error: true, helperText: 'At least 6 characters' };\n    const textField = controlEmail(email) ? null : { error: true, helperText: 'Email is required' };\n    const buttonType = control === false ? { disabled: true } : { color: 'primary' };\n\n    return (\n        <>\n            <div className={classes.dialogStyle}>\n                <DialogTitle style={{ textAlign: 'center', marginTop: '8%' }} id=\"form-dialog-title\"><b>Login on My Library</b></DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={1} alignItems=\"flex-end\">\n                        <Grid item>\n                            <MailOutlineIcon color=\"disabled\" />\n                        </Grid>\n                        <Grid item>\n                            <TextField\n                                className={classes.textFieldStyle}\n                                {...textField}\n                                margin=\"small\"\n                                id=\"name\"\n                                label=\"E-Mail\"\n                                type=\"email\"\n                                value={email}\n                                onChange={e => setEmail(e.target.value)}\n                                fullWidth\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogContent style={{ overflow: 'hidden' }}>\n                    <Grid container spacing={1} alignItems=\"flex-end\">\n                        <Grid item>\n                            <LockIcon color=\"disabled\" />\n                        </Grid>\n                        <Grid item>\n                            <FormControl {...passwordControl} >\n                                <InputLabel>Password</InputLabel>\n                                <Input\n                                    className={classes.textFieldStyle}\n                                    {...passwordControl}\n                                    margin=\"small\"\n                                    id=\"name\"\n                                    value={psw}\n                                    onChange={e => setPsw(e.target.value)}\n                                    type={showPassword ? 'text' : 'password'}\n                                    fullWidth\n                                    endAdornment={\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                onClick={e => showPassword ? setVisibility(false) : setVisibility(true)}\n                                            >\n                                                {showPassword ? <Visibility /> : <VisibilityOff color=\"disabled\" />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    }\n                                />\n                            </FormControl>\n\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogContent style={{ textAlign: 'end' }}>\n                    <p className={classes.forgotPsw}><NavLink to=\"/\" onClick={handleClose} className={classes.linkStyle}>Do you forgot your password?</NavLink></p>\n\n                </DialogContent>\n                <DialogActions className={classes.buttonSyle}>\n                    <Button style={{ borderRadius: 50 }} size=\"medium\" variant=\"contained\" {...buttonType}>\n                        Login with your email\n                </Button>\n                </DialogActions>\n\n            </div>\n\n        </>\n    )\n}","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/signInUp/SignUp.jsx",["91","92"],"import React, { useState, useEffect, useContext } from 'react';\nimport {\n    TextField, DialogActions, DialogContent, DialogTitle,\n    makeStyles, Button, Grid, Input, InputAdornment,\n    IconButton, FormControl, InputLabel,\n} from '@material-ui/core';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { Context } from '../../context/Context';\n\nconst useStyle = makeStyles((theme) => ({\n    dialogStyle: {\n        padding: 15,\n        [theme.breakpoints.up('sm')]: {\n            padding: '0 4rem',\n        },\n        maxWidth: 600,\n    },\n    textFieldStyle: {\n        width: 'auto',\n        [theme.breakpoints.up('xs')]: {\n            width: 140,\n        },\n        [theme.breakpoints.up('sm')]: {\n            width: 300,\n        },\n        [theme.breakpoints.up('md')]: {\n            width: 340,\n        },\n    },\n    buttonStyle: {\n        justifyContent: 'center',\n        paddingTop: 50,\n    },\n    forgotPsw: {\n        fontSize: 13,\n    },\n    linkStyle: {\n        textDecoration: 'none',\n        color: 'green',\n        \"&:hover\": {\n            color: 'black',\n            textDecoration: 'none',\n        },\n    },\n\n}))\n\nexport default function Login({ handleClose }) {\n    const classes = useStyle();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [psw, setPsw] = useState('');\n    const [control, setControl] = useState(false);\n    const [showPassword, setVisibility] = useState(false);\n    const { registered } = useContext(Context);\n\n    const controlEmail = (email) => {\n        if (email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i) || email === '')\n            return true;\n        else\n            return false;\n    };\n\n    const ready = () => {\n        if (email !== '' && psw !== '' && controlEmail(email) && psw.length >= 8)\n            setControl(true);\n        else\n            setControl(false);\n    };\n\n    useEffect(() => {\n        ready();\n    }, [email, psw]);\n\n    const signUp = e => {\n        e.preventDefault();\n        console.log('REGISTRATO INFAME');\n        handleClose();\n        registered();\n    };\n\n    const passwordControl = psw.length >= 8 || psw === '' ? null : { error: true, helperText: 'At least 6 characters' };\n    const textField = controlEmail(email) ? null : { error: true, helperText: 'Email is required' };\n    const buttonType = control === false ? { disabled: true } : { color: 'primary' };\n\n    return (\n        <>\n            <div className={classes.dialogStyle}>\n                <form action=\"post\" onSubmit={signUp}>\n                    <DialogTitle style={{ textAlign: 'center', marginTop: '8%' }} id=\"form-dialog-title\"><b>Signup on My Library</b></DialogTitle>\n\n                    <DialogContent>\n                        <Grid container spacing={2} alignItems=\"flex-end\">\n                            <Grid item>\n                                <PersonIcon color=\"disabled\" />\n                            </Grid>\n                            <Grid item>\n                                <TextField\n                                    className={classes.textFieldStyle}\n                                    label=\"Name\"\n                                    onChange={e => setName(e.target.value)}\n                                    id=\"name\"\n                                    type=\"text\"\n                                    fullWidth\n                                    margin=\"small\"\n                                />\n                            </Grid>\n                        </Grid>\n\n                        <Grid container spacing={2} alignItems=\"flex-end\">\n                            <Grid item>\n                                <MailOutlineIcon color=\"disabled\" />\n                            </Grid>\n                            <Grid item>\n                                <TextField\n                                    className={classes.textFieldStyle}\n                                    {...textField}\n                                    margin=\"small\"\n                                    id=\"email\"\n                                    label=\"E-Mail\"\n                                    type=\"email\"\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                    fullWidth\n                                />\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <DialogContent style={{ overflow: 'hidden' }}>\n                        <Grid container spacing={2} alignItems=\"flex-end\">\n                            <Grid item>\n                                <LockIcon color=\"disabled\" />\n                            </Grid>\n                            <Grid item style={{ paddingTop: 0 }}>\n                                <FormControl {...passwordControl}>\n                                    <InputLabel>Password</InputLabel>\n                                    <Input\n                                        className={classes.textFieldStyle}\n                                        {...passwordControl}\n                                        margin=\"small\"\n                                        id=\"name\"\n                                        value={psw}\n                                        onChange={e => setPsw(e.target.value)}\n                                        type={showPassword ? 'text' : 'password'}\n                                        fullWidth\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    onClick={e => showPassword ? setVisibility(false) : setVisibility(true)}\n                                                >\n                                                    {showPassword ? <Visibility /> : <VisibilityOff color=\"disabled\" />}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                    />\n                                </FormControl>\n\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <DialogActions className={classes.buttonStyle}>\n                        <Button type=\"submit\" style={{ borderRadius: 50 }} size=\"medium\" variant=\"contained\" {...buttonType}>\n                            Signup with your email\n                        </Button>\n                    </DialogActions>\n                </form>\n            </div>\n        </>\n    )\n}","/Users/simopro/Desktop/Start2Impact/reactproject/library/src/components/book/BookFocus.jsx",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":88,"column":29,"nodeType":"99","endLine":88,"endColumn":62},{"ruleId":"97","severity":1,"message":"98","line":100,"column":25,"nodeType":"99","endLine":100,"endColumn":58},{"ruleId":"100","severity":1,"message":"101","line":158,"column":90,"nodeType":"102","messageId":"103","endLine":158,"endColumn":91},{"ruleId":"93","replacedBy":"104"},{"ruleId":"95","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":53,"column":8,"nodeType":"108","endLine":53,"endColumn":10,"suggestions":"109"},{"ruleId":"93","replacedBy":"110"},{"ruleId":"95","replacedBy":"111"},{"ruleId":"106","severity":1,"message":"112","line":75,"column":8,"nodeType":"108","endLine":75,"endColumn":20,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":54,"column":12,"nodeType":"116","messageId":"117","endLine":54,"endColumn":16},{"ruleId":"106","severity":1,"message":"112","line":77,"column":8,"nodeType":"108","endLine":77,"endColumn":20,"suggestions":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["119"],["120"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'genre'. Either include it or remove the dependency array.","ArrayExpression",["121"],["119"],["120"],"React Hook useEffect has a missing dependency: 'ready'. Either include it or remove the dependency array.",["122"],"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar",["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"126","fix":"128"},"Update the dependencies array to be: [genre]",{"range":"129","text":"130"},"Update the dependencies array to be: [email, psw, ready]",{"range":"131","text":"132"},{"range":"133","text":"132"},[1396,1398],"[genre]",[1999,2011],"[email, psw, ready]",[2159,2171]]